Enum upgrade_type {
  health_max
  stamina_max
  movement_speed
}

enum cause_of_death {
  enemy_kill
  boss_kill
  timeout
  disconnect
  active
}

enum enemy_type {
  basic
  strong
}

enum boss_type {
  dragon
}

enum weapon_type {
  melee
  ranged
}

Project dbshatteredtimeline {
  database_type: 'MySQL'
  Note: 'Shattered Timeline v2.1 optimized schema'
}

Table users [
  Note: 'Usuarios del juego - autenticación básica'
] {
  user_id int [pk, increment]
  username varchar(50) [not null, unique]
  email varchar(100) [not null, unique]
  password_hash varchar(255) [not null]
  created_at datetime [default: `CURRENT_TIMESTAMP`]
  last_login datetime
  is_active boolean [default: true]

  indexes {
    (username) [name: 'idx_username']
    (email) [name: 'idx_email']
    (is_active, last_login) [name: 'idx_active_users']
  }
}

Table sessions [
  Note: 'Sesiones activas de usuarios'
] {
  session_id int [pk, increment]
  user_id int [not null]
  session_token varchar(255) [not null, unique]
  created_at datetime [default: `CURRENT_TIMESTAMP`]
  expires_at datetime [not null]
  is_active boolean [default: true]
  ip_address varchar(45)
  user_agent text

  indexes {
    (user_id, is_active) [name: 'idx_user_sessions']
    (session_token) [name: 'idx_session_token']
    (expires_at, is_active) [name: 'idx_session_expiry']
  }
}

Table save_states [
  Note: 'Estado guardado del jugador para continuidad entre sesiones'
] {
  save_id int [pk, increment]
  user_id int [not null]
  session_id int [not null]
  run_id int
  room_id int [default: 1]
  current_hp int [default: 100]
  current_stamina int [default: 100]
  gold int [default: 0]
  is_active boolean [default: true]
  logout_timestamp datetime
  saved_at datetime [default: `CURRENT_TIMESTAMP`]

  indexes {
    (user_id, is_active) [name: 'idx_user_save_states']
    (session_id) [name: 'idx_session_save_states']
    (run_id) [name: 'idx_run_save_states']
  }
}

Table permanent_player_upgrades [
  Note: 'Mejoras permanentes del personaje'
] {
  upgrade_id int [pk, increment]
  user_id int [not null]
  upgrade_type upgrade_type [not null]
  level int [default: 1]
  updated_at datetime [default: `CURRENT_TIMESTAMP`, note: 'ON UPDATE CURRENT_TIMESTAMP']

  indexes {
    (user_id) [name: 'idx_user_upgrades']
    (user_id, upgrade_type) [name: 'unique_user_upgrade', unique]
  }
}

Table weapon_upgrades_temp [
  Note: 'Mejoras temporales de armas. Se mantienen en logout, se resetean en muerte'
] {
  temp_upgrade_id int [pk, increment]
  user_id int [not null]
  run_id int [not null]
  melee_level int [default: 1]
  ranged_level int [default: 1]
  updated_at datetime [default: `CURRENT_TIMESTAMP`, note: 'ON UPDATE CURRENT_TIMESTAMP']

  indexes {
    (user_id) [name: 'idx_user_weapon_upgrades']
    (run_id) [name: 'idx_run_weapon_upgrades']
    (user_id, run_id) [name: 'unique_user_run', unique]
  }
}

Table player_stats [
  Note: 'Estadísticas históricas agregadas del jugador'
] {
  stat_id int [pk, increment]
  user_id int [not null]
  total_runs int [default: 0]
  total_kills int [default: 0]
  total_deaths int [default: 0]
  total_gold_earned int [default: 0]
  total_bosses_killed int [default: 0]
  highest_floor int [default: 1]
  total_playtime_seconds int [default: 0]
  last_updated datetime [default: `CURRENT_TIMESTAMP`, note: 'ON UPDATE CURRENT_TIMESTAMP']

  indexes {
    (user_id) [name: 'unique_user_stats', unique]
    (highest_floor) [name: 'idx_highest_floor']
    (total_bosses_killed) [name: 'idx_total_bosses']
  }
}

Table run_history [
  Note: 'Historial de intentos de juego (runs) del jugador'
] {
  run_id int [pk, increment]
  user_id int [not null]
  started_at datetime [default: `CURRENT_TIMESTAMP`]
  ended_at datetime
  final_floor int [default: 1]
  final_gold int [default: 0]
  cause_of_death cause_of_death [default: 'active']
  total_kills int [default: 0]
  bosses_killed int [default: 0]
  duration_seconds int [default: 0]

  indexes {
    (user_id, started_at) [name: 'idx_user_runs']
    (cause_of_death, ended_at) [name: 'idx_active_runs']
    (final_floor, total_kills) [name: 'idx_run_performance']
  }
}

Table weapon_upgrade_purchases [
  Note: 'Registro de compras de upgrades de armas en la tienda'
] {
  purchase_id int [pk, increment]
  user_id int [not null]
  run_id int [not null]
  weapon_type weapon_type [not null]
  upgrade_level int [not null]
  cost int [not null]
  purchased_at datetime [default: `CURRENT_TIMESTAMP`]

  indexes {
    (user_id, purchased_at) [name: 'idx_user_purchases']
    (run_id) [name: 'idx_run_purchases']
    (weapon_type, upgrade_level) [name: 'idx_weapon_analytics']
  }
}

Table enemy_kills [
  Note: 'Registro de eliminaciones de enemigos para analytics'
] {
  kill_id int [pk, increment]
  user_id int [not null]
  run_id int [not null]
  enemy_type enemy_type [not null]
  room_id int [not null]
  floor int [not null]
  killed_at datetime [default: `CURRENT_TIMESTAMP`]

  indexes {
    (user_id, killed_at) [name: 'idx_user_kills']
    (run_id) [name: 'idx_run_kills']
    (enemy_type, floor) [name: 'idx_combat_analytics']
  }
}

Table boss_kills [
  Note: 'Registro específico de eliminaciones de jefes'
] {
  boss_kill_id int [pk, increment]
  user_id int [not null]
  run_id int [not null]
  boss_type boss_type [default: 'dragon']
  floor int [not null]
  fight_duration_seconds int [default: 0]
  player_hp_remaining int [default: 0]
  killed_at datetime [default: `CURRENT_TIMESTAMP`]

  indexes {
    (user_id, killed_at) [name: 'idx_user_boss_kills']
    (run_id) [name: 'idx_run_boss_kills']
    (boss_type, floor) [name: 'idx_boss_analytics']
  }
}

Table player_settings [
  Note: 'Configuraciones personalizadas del jugador'
] {
  setting_id int [pk, increment]
  user_id int [not null]
  music_volume float [default: 0.7]
  sfx_volume float [default: 0.8]
  show_fps boolean [default: false]
  auto_save_enabled boolean [default: true]
  updated_at datetime [default: `CURRENT_TIMESTAMP`, note: 'ON UPDATE CURRENT_TIMESTAMP']

  indexes {
    (user_id) [name: 'unique_user_settings', unique]
  }
}

// Foreign Key Relationships
Ref: sessions.user_id > users.user_id [delete: cascade]
Ref: save_states.user_id > users.user_id [delete: cascade]
Ref: save_states.session_id > sessions.session_id [delete: cascade]
Ref: save_states.run_id > run_history.run_id [delete: set null]
Ref: permanent_player_upgrades.user_id > users.user_id [delete: cascade]
Ref: weapon_upgrades_temp.user_id > users.user_id [delete: cascade]
Ref: weapon_upgrades_temp.run_id > run_history.run_id [delete: cascade]
Ref: player_stats.user_id > users.user_id [delete: cascade]
Ref: run_history.user_id > users.user_id [delete: cascade]
Ref: weapon_upgrade_purchases.user_id > users.user_id [delete: cascade]
Ref: weapon_upgrade_purchases.run_id > run_history.run_id [delete: cascade]
Ref: enemy_kills.user_id > users.user_id [delete: cascade]
Ref: enemy_kills.run_id > run_history.run_id [delete: cascade]
Ref: boss_kills.user_id > users.user_id [delete: cascade]
Ref: boss_kills.run_id > run_history.run_id [delete: cascade]
Ref: player_settings.user_id > users.user_id [delete: cascade]